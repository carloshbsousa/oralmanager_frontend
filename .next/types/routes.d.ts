// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/analytics" | "/appointments" | "/appointments/calendar" | "/appointments/new" | "/budgets" | "/budgets/[id]" | "/budgets/new" | "/clinical-records" | "/clinical-records/[id]" | "/clinical-records/new" | "/financial/overview" | "/financial/payables" | "/financial/receivables" | "/login" | "/patients" | "/patients/[id]" | "/patients/[id]/edit" | "/patients/[id]/history" | "/patients/[id]/odontogram" | "/patients/new" | "/register" | "/reports" | "/reports/appointments" | "/reports/financial" | "/reports/patients" | "/reports/production" | "/settings" | "/settings/clinic" | "/settings/dentists" | "/settings/procedures" | "/settings/profile" | "/settings/subscription"
type PageRoutes = never
type LayoutRoutes = "/"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes


interface ParamMap {
  "/": {}
  "/analytics": {}
  "/appointments": {}
  "/appointments/calendar": {}
  "/appointments/new": {}
  "/budgets": {}
  "/budgets/[id]": { "id": string; }
  "/budgets/new": {}
  "/clinical-records": {}
  "/clinical-records/[id]": { "id": string; }
  "/clinical-records/new": {}
  "/financial/overview": {}
  "/financial/payables": {}
  "/financial/receivables": {}
  "/login": {}
  "/patients": {}
  "/patients/[id]": { "id": string; }
  "/patients/[id]/edit": { "id": string; }
  "/patients/[id]/history": { "id": string; }
  "/patients/[id]/odontogram": { "id": string; }
  "/patients/new": {}
  "/register": {}
  "/reports": {}
  "/reports/appointments": {}
  "/reports/financial": {}
  "/reports/patients": {}
  "/reports/production": {}
  "/settings": {}
  "/settings/clinic": {}
  "/settings/dentists": {}
  "/settings/procedures": {}
  "/settings/profile": {}
  "/settings/subscription": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }
}

// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/types.js"

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}


// Validate ../../app/(auth)/login/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/login">> = Specific
  const handler = {} as typeof import("../../app/(auth)/login/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(auth)/register/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/register">> = Specific
  const handler = {} as typeof import("../../app/(auth)/register/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(dashboard)/analytics/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/analytics">> = Specific
  const handler = {} as typeof import("../../app/(dashboard)/analytics/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(dashboard)/appointments/calendar/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/appointments/calendar">> = Specific
  const handler = {} as typeof import("../../app/(dashboard)/appointments/calendar/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(dashboard)/appointments/new/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/appointments/new">> = Specific
  const handler = {} as typeof import("../../app/(dashboard)/appointments/new/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(dashboard)/appointments/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/appointments">> = Specific
  const handler = {} as typeof import("../../app/(dashboard)/appointments/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(dashboard)/budgets/[id]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/budgets/[id]">> = Specific
  const handler = {} as typeof import("../../app/(dashboard)/budgets/[id]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(dashboard)/budgets/new/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/budgets/new">> = Specific
  const handler = {} as typeof import("../../app/(dashboard)/budgets/new/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(dashboard)/budgets/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/budgets">> = Specific
  const handler = {} as typeof import("../../app/(dashboard)/budgets/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(dashboard)/clinical-records/[id]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/clinical-records/[id]">> = Specific
  const handler = {} as typeof import("../../app/(dashboard)/clinical-records/[id]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(dashboard)/clinical-records/new/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/clinical-records/new">> = Specific
  const handler = {} as typeof import("../../app/(dashboard)/clinical-records/new/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(dashboard)/clinical-records/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/clinical-records">> = Specific
  const handler = {} as typeof import("../../app/(dashboard)/clinical-records/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(dashboard)/financial/overview/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/financial/overview">> = Specific
  const handler = {} as typeof import("../../app/(dashboard)/financial/overview/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(dashboard)/financial/payables/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/financial/payables">> = Specific
  const handler = {} as typeof import("../../app/(dashboard)/financial/payables/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(dashboard)/financial/receivables/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/financial/receivables">> = Specific
  const handler = {} as typeof import("../../app/(dashboard)/financial/receivables/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(dashboard)/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/(dashboard)/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(dashboard)/patients/[id]/edit/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/patients/[id]/edit">> = Specific
  const handler = {} as typeof import("../../app/(dashboard)/patients/[id]/edit/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(dashboard)/patients/[id]/history/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/patients/[id]/history">> = Specific
  const handler = {} as typeof import("../../app/(dashboard)/patients/[id]/history/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(dashboard)/patients/[id]/odontogram/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/patients/[id]/odontogram">> = Specific
  const handler = {} as typeof import("../../app/(dashboard)/patients/[id]/odontogram/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(dashboard)/patients/[id]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/patients/[id]">> = Specific
  const handler = {} as typeof import("../../app/(dashboard)/patients/[id]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(dashboard)/patients/new/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/patients/new">> = Specific
  const handler = {} as typeof import("../../app/(dashboard)/patients/new/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(dashboard)/patients/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/patients">> = Specific
  const handler = {} as typeof import("../../app/(dashboard)/patients/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(dashboard)/reports/appointments/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/reports/appointments">> = Specific
  const handler = {} as typeof import("../../app/(dashboard)/reports/appointments/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(dashboard)/reports/financial/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/reports/financial">> = Specific
  const handler = {} as typeof import("../../app/(dashboard)/reports/financial/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(dashboard)/reports/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/reports">> = Specific
  const handler = {} as typeof import("../../app/(dashboard)/reports/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(dashboard)/reports/patients/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/reports/patients">> = Specific
  const handler = {} as typeof import("../../app/(dashboard)/reports/patients/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(dashboard)/reports/production/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/reports/production">> = Specific
  const handler = {} as typeof import("../../app/(dashboard)/reports/production/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(dashboard)/settings/clinic/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/settings/clinic">> = Specific
  const handler = {} as typeof import("../../app/(dashboard)/settings/clinic/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(dashboard)/settings/dentists/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/settings/dentists">> = Specific
  const handler = {} as typeof import("../../app/(dashboard)/settings/dentists/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(dashboard)/settings/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/settings">> = Specific
  const handler = {} as typeof import("../../app/(dashboard)/settings/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(dashboard)/settings/procedures/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/settings/procedures">> = Specific
  const handler = {} as typeof import("../../app/(dashboard)/settings/procedures/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(dashboard)/settings/profile/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/settings/profile">> = Specific
  const handler = {} as typeof import("../../app/(dashboard)/settings/profile/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(dashboard)/settings/subscription/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/settings/subscription">> = Specific
  const handler = {} as typeof import("../../app/(dashboard)/settings/subscription/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}







// Validate ../../app/(dashboard)/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/(dashboard)/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}
